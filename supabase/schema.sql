-- Supabase SQL Schema for NOVA-E Project
-- 使用此文件在Supabase中设置数据库结构

-- 启用 UUID 扩展（Supabase通常已经启用）
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- 1. 用户表
CREATE TABLE IF NOT EXISTS users (
  user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  password TEXT NOT NULL UNIQUE,
  total_points REAL DEFAULT 0 NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

-- 2. 目标/项目表
CREATE TABLE IF NOT EXISTS goals (
  goal_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
  name TEXT NOT NULL,
  description TEXT,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

-- 创建索引加速用户的目标查询
CREATE INDEX IF NOT EXISTS idx_goals_user_id ON goals(user_id);

-- 3. 支线任务表
CREATE TABLE IF NOT EXISTS tasks (
  task_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
  goal_id BIGINT REFERENCES goals(goal_id) ON DELETE SET NULL,
  name TEXT NOT NULL,
  description TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
  priority INTEGER DEFAULT 0 NOT NULL,
  status TEXT NOT NULL DEFAULT 'ongoing',
  reward_points REAL DEFAULT 0 NOT NULL,
  image_path TEXT
);

-- 创建索引
CREATE INDEX IF NOT EXISTS idx_tasks_user_id ON tasks(user_id);
CREATE INDEX IF NOT EXISTS idx_tasks_goal_id ON tasks(goal_id);
CREATE INDEX IF NOT EXISTS idx_tasks_status ON tasks(status);

-- 4. 日常任务模板表
CREATE TABLE IF NOT EXISTS task_templates (
  template_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
  name TEXT NOT NULL,
  description TEXT,
  default_points REAL,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

-- 创建索引
CREATE INDEX IF NOT EXISTS idx_task_templates_user_id ON task_templates(user_id);

-- 5. 任务安排表
CREATE TABLE IF NOT EXISTS schedule_entries (
  entry_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
  date DATE NOT NULL,
  slot TEXT NOT NULL,
  status TEXT NOT NULL DEFAULT 'ongoing',
  task_type TEXT NOT NULL,
  ref_task_id BIGINT REFERENCES tasks(task_id) ON DELETE SET NULL,
  ref_template_id BIGINT REFERENCES task_templates(template_id) ON DELETE SET NULL,
  custom_name TEXT,
  custom_desc TEXT,
  reward_points REAL DEFAULT 0 NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

-- 创建索引
CREATE INDEX IF NOT EXISTS idx_schedule_entries_user_id ON schedule_entries(user_id);
CREATE INDEX IF NOT EXISTS idx_schedule_entries_date ON schedule_entries(date);
CREATE INDEX IF NOT EXISTS idx_schedule_entries_user_date ON schedule_entries(user_id, date);
CREATE INDEX IF NOT EXISTS idx_schedule_entries_status ON schedule_entries(status);

-- 6. 笔记表
CREATE TABLE IF NOT EXISTS notes (
  note_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
  goal_id BIGINT REFERENCES goals(goal_id) ON DELETE SET NULL,
  content TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT (now() AT TIME ZONE 'Asia/Taipei'::text) NOT NULL,
  updated_at TIMESTAMPTZ DEFAULT (now() AT TIME ZONE 'Asia/Taipei'::text) NOT NULL
);

-- 创建索引
CREATE INDEX IF NOT EXISTS idx_notes_user_id ON notes(user_id);
CREATE INDEX IF NOT EXISTS idx_notes_goal_id ON notes(goal_id);
CREATE INDEX IF NOT EXISTS idx_notes_updated_at ON notes(updated_at);

-- 创建函数来自动更新 updated_at 字段
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = (now() AT TIME ZONE 'Asia/Taipei'::text);
    RETURN NEW;
END;
$$ language 'plpgsql';

-- 为 notes 表创建触发器，在更新时自动设置 updated_at
CREATE TRIGGER update_notes_updated_at 
    BEFORE UPDATE ON notes 
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();

-- 如果有需要，添加存储桶用于任务图片上传
INSERT INTO storage.buckets (id, name) VALUES ('task_images', 'Task Images')
ON CONFLICT DO NOTHING;

-- 迁移脚本：为现有的 notes 表添加 updated_at 字段（如果不存在）
DO $$ 
BEGIN
    -- 检查 updated_at 列是否存在，如果不存在则添加
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'notes' AND column_name = 'updated_at'
    ) THEN
        -- 添加 updated_at 列
        ALTER TABLE notes ADD COLUMN updated_at TIMESTAMPTZ DEFAULT (now() AT TIME ZONE 'Asia/Taipei'::text) NOT NULL;
        
        -- 将现有记录的 updated_at 设置为 created_at 的值
        UPDATE notes SET updated_at = created_at WHERE updated_at IS NULL;
        
        -- 创建索引
        CREATE INDEX IF NOT EXISTS idx_notes_updated_at ON notes(updated_at);
        
        -- 创建触发器
        CREATE TRIGGER update_notes_updated_at 
            BEFORE UPDATE ON notes 
            FOR EACH ROW 
            EXECUTE FUNCTION update_updated_at_column();
    END IF;
END $$;
