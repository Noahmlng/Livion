-- =====================================
-- 积分系统数据库迁移 SQL
-- =====================================

-- 1. 更新users表：添加积分系统相关字段
ALTER TABLE public.users 
ADD COLUMN IF NOT EXISTS daily_pay real NOT NULL DEFAULT 1000,
ADD COLUMN IF NOT EXISTS user_goals jsonb DEFAULT '[]'::jsonb,
  ADD COLUMN IF NOT EXISTS user_competencies_to_develop jsonb DEFAULT '[]'::jsonb,
ADD COLUMN IF NOT EXISTS points_settings jsonb DEFAULT '{}'::jsonb;

-- 为users表添加注释
COMMENT ON COLUMN public.users.daily_pay IS '用户日薪参数，用于积分计算';
COMMENT ON COLUMN public.users.user_goals IS '用户目标列表，JSON数组格式';
COMMENT ON COLUMN public.users.user_competencies_to_develop IS '用户要去习得的能力列表，JSON数组格式';
COMMENT ON COLUMN public.users.points_settings IS '积分系统相关设置，JSON格式';

-- 2. 更新challenge表：添加积分计算相关字段
ALTER TABLE public.challenge 
ADD COLUMN IF NOT EXISTS task_record text DEFAULT '',
ADD COLUMN IF NOT EXISTS estimated_time real DEFAULT 0,
ADD COLUMN IF NOT EXISTS reward_multiplier real DEFAULT 1.0,
ADD COLUMN IF NOT EXISTS learning_reward real DEFAULT 0,
ADD COLUMN IF NOT EXISTS points_calculated_at timestamp with time zone,
ADD COLUMN IF NOT EXISTS ai_evaluation jsonb DEFAULT '{}'::jsonb;

-- 为challenge表添加注释
COMMENT ON COLUMN public.challenge.task_record IS '任务记录，用于学习评估';
COMMENT ON COLUMN public.challenge.estimated_time IS '预估完成时间（天）';
COMMENT ON COLUMN public.challenge.reward_multiplier IS '奖励系数';
COMMENT ON COLUMN public.challenge.learning_reward IS '学习奖励分数';
COMMENT ON COLUMN public.challenge.points_calculated_at IS '积分计算时间';
COMMENT ON COLUMN public.challenge.ai_evaluation IS 'AI评估结果，JSON格式';

-- 3. 更新task表：添加积分计算相关字段
ALTER TABLE public.task 
ADD COLUMN IF NOT EXISTS task_record text DEFAULT '',
ADD COLUMN IF NOT EXISTS estimated_time real DEFAULT 0,
ADD COLUMN IF NOT EXISTS reward_multiplier real DEFAULT 1.0,
ADD COLUMN IF NOT EXISTS learning_reward real DEFAULT 0,
ADD COLUMN IF NOT EXISTS points_calculated_at timestamp with time zone,
ADD COLUMN IF NOT EXISTS ai_evaluation jsonb DEFAULT '{}'::jsonb;

-- 为task表添加注释
COMMENT ON COLUMN public.task.task_record IS '任务记录，用于学习评估';
COMMENT ON COLUMN public.task.estimated_time IS '预估完成时间（天）';
COMMENT ON COLUMN public.task.reward_multiplier IS '奖励系数';
COMMENT ON COLUMN public.task.learning_reward IS '学习奖励分数';
COMMENT ON COLUMN public.task.points_calculated_at IS '积分计算时间';
COMMENT ON COLUMN public.task.ai_evaluation IS 'AI评估结果，JSON格式';

-- 4. 创建积分历史记录表
CREATE TABLE IF NOT EXISTS public.points_history (
  history_id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id bigint NOT NULL,
  task_id bigint NULL,
  schedule_entry_id bigint NULL,
  task_title text NOT NULL,
  task_record text DEFAULT '',
  points_earned real NOT NULL,
  base_amount real NOT NULL,
  reward_amount real NOT NULL,
  reward_multiplier real NOT NULL,
  learning_reward real NOT NULL,
  estimated_time real NOT NULL,
  daily_pay real NOT NULL,
  reasoning text DEFAULT '',
  provider text DEFAULT 'DeepSeek',
  api_cost real DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT (now() AT TIME ZONE 'Asia/Taipei'::text),
  CONSTRAINT points_history_pkey PRIMARY KEY (history_id),
  CONSTRAINT points_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
  CONSTRAINT points_history_task_id_fkey FOREIGN KEY (task_id) REFERENCES challenge (task_id) ON DELETE SET NULL,
  CONSTRAINT points_history_schedule_entry_id_fkey FOREIGN KEY (schedule_entry_id) REFERENCES task (entry_id) ON DELETE SET NULL
) TABLESPACE pg_default;

-- 为points_history表添加注释
COMMENT ON TABLE public.points_history IS '积分计算历史记录表';
COMMENT ON COLUMN public.points_history.task_title IS '任务标题';
COMMENT ON COLUMN public.points_history.task_record IS '任务记录';
COMMENT ON COLUMN public.points_history.points_earned IS '获得的积分';
COMMENT ON COLUMN public.points_history.base_amount IS '基础金额';
COMMENT ON COLUMN public.points_history.reward_amount IS '奖励金额';
COMMENT ON COLUMN public.points_history.reward_multiplier IS '奖励系数';
COMMENT ON COLUMN public.points_history.learning_reward IS '学习奖励';
COMMENT ON COLUMN public.points_history.estimated_time IS '预估时间（天）';
COMMENT ON COLUMN public.points_history.daily_pay IS '计算时使用的日薪';
COMMENT ON COLUMN public.points_history.reasoning IS 'AI评估理由';
COMMENT ON COLUMN public.points_history.provider IS 'AI服务提供商';
COMMENT ON COLUMN public.points_history.api_cost IS 'API调用成本';

-- 5. 创建积分历史记录表的索引
CREATE INDEX IF NOT EXISTS idx_points_history_user_id ON public.points_history USING btree (user_id) TABLESPACE pg_default;
CREATE INDEX IF NOT EXISTS idx_points_history_task_id ON public.points_history USING btree (task_id) TABLESPACE pg_default;
CREATE INDEX IF NOT EXISTS idx_points_history_schedule_entry_id ON public.points_history USING btree (schedule_entry_id) TABLESPACE pg_default;
CREATE INDEX IF NOT EXISTS idx_points_history_created_at ON public.points_history USING btree (created_at DESC) TABLESPACE pg_default;
CREATE INDEX IF NOT EXISTS idx_points_history_user_created_at ON public.points_history USING btree (user_id, created_at DESC) TABLESPACE pg_default;

-- 6. 创建用户目标表（可选，如果需要更详细的目标管理）
CREATE TABLE IF NOT EXISTS public.user_goals (
  goal_id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id bigint NOT NULL,
  goal_text text NOT NULL,
  priority integer NOT NULL DEFAULT 0,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT (now() AT TIME ZONE 'Asia/Taipei'::text),
  updated_at timestamp with time zone NOT NULL DEFAULT (now() AT TIME ZONE 'Asia/Taipei'::text),
  CONSTRAINT user_goals_pkey PRIMARY KEY (goal_id),
  CONSTRAINT user_goals_user_id_fkey FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE
) TABLESPACE pg_default;

-- 7. 创建用户技能表（可选，如果需要更详细的技能管理）
CREATE TABLE IF NOT EXISTS public.user_competencies_to_develop (
  skill_id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id bigint NOT NULL,
  skill_text text NOT NULL,
  priority integer NOT NULL DEFAULT 0,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT (now() AT TIME ZONE 'Asia/Taipei'::text),
  updated_at timestamp with time zone NOT NULL DEFAULT (now() AT TIME ZONE 'Asia/Taipei'::text),
  CONSTRAINT user_competencies_to_develop_pkey PRIMARY KEY (skill_id),
  CONSTRAINT user_competencies_to_develop_user_id_fkey FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE
) TABLESPACE pg_default;

-- 8. 创建用户目标和技能表的索引
CREATE INDEX IF NOT EXISTS idx_user_goals_user_id ON public.user_goals USING btree (user_id) TABLESPACE pg_default;
CREATE INDEX IF NOT EXISTS idx_user_goals_priority ON public.user_goals USING btree (priority DESC) TABLESPACE pg_default;
CREATE INDEX IF NOT EXISTS idx_user_competencies_to_develop_user_id ON public.user_competencies_to_develop USING btree (user_id) TABLESPACE pg_default;
CREATE INDEX IF NOT EXISTS idx_user_competencies_to_develop_priority ON public.user_competencies_to_develop USING btree (priority DESC) TABLESPACE pg_default;

-- 9. 创建触发器函数（如果不存在）
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = now() AT TIME ZONE 'Asia/Taipei';
    RETURN NEW;
END;
$$ language 'plpgsql';

-- 10. 为新表添加更新时间触发器
CREATE TRIGGER update_user_goals_updated_at BEFORE UPDATE ON user_goals FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_user_competencies_to_develop_updated_at BEFORE UPDATE ON user_competencies_to_develop FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- 11. 添加数据验证约束
ALTER TABLE public.users 
ADD CONSTRAINT users_daily_pay_positive CHECK (daily_pay > 0);

ALTER TABLE public.challenge 
ADD CONSTRAINT challenge_estimated_time_positive CHECK (estimated_time >= 0),
ADD CONSTRAINT challenge_reward_multiplier_positive CHECK (reward_multiplier >= 0),
ADD CONSTRAINT challenge_learning_reward_positive CHECK (learning_reward >= 0);

ALTER TABLE public.task 
ADD CONSTRAINT task_estimated_time_positive CHECK (estimated_time >= 0),
ADD CONSTRAINT task_reward_multiplier_positive CHECK (reward_multiplier >= 0),
ADD CONSTRAINT task_learning_reward_positive CHECK (learning_reward >= 0);

ALTER TABLE public.points_history 
ADD CONSTRAINT points_history_points_earned_positive CHECK (points_earned >= 0),
ADD CONSTRAINT points_history_base_amount_positive CHECK (base_amount >= 0),
ADD CONSTRAINT points_history_reward_amount_positive CHECK (reward_amount >= 0),
ADD CONSTRAINT points_history_reward_multiplier_positive CHECK (reward_multiplier >= 0),
ADD CONSTRAINT points_history_learning_reward_positive CHECK (learning_reward >= 0),
ADD CONSTRAINT points_history_estimated_time_positive CHECK (estimated_time >= 0),
ADD CONSTRAINT points_history_daily_pay_positive CHECK (daily_pay > 0);

-- 12. 添加表注释
COMMENT ON TABLE public.user_goals IS '用户目标表';
COMMENT ON TABLE public.user_competencies_to_develop IS '用户要去习得的能力表'; 